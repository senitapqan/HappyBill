// Code generated by MockGen. DO NOT EDIT.
// Source: validator.go

// Package mock_handler is a generated GoMock package.
package mock_handler

import (
	dtos "happyBill/dtos"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockValidator is a mock of Validator interface.
type MockValidator struct {
	ctrl     *gomock.Controller
	recorder *MockValidatorMockRecorder
}

// MockValidatorMockRecorder is the mock recorder for MockValidator.
type MockValidatorMockRecorder struct {
	mock *MockValidator
}

// NewMockValidator creates a new mock instance.
func NewMockValidator(ctrl *gomock.Controller) *MockValidator {
	mock := &MockValidator{ctrl: ctrl}
	mock.recorder = &MockValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidator) EXPECT() *MockValidatorMockRecorder {
	return m.recorder
}

// ValidateFilter mocks base method.
func (m *MockValidator) ValidateFilter(c *gin.Context, filter *dtos.Filter) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateFilter", c, filter)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateFilter indicates an expected call of ValidateFilter.
func (mr *MockValidatorMockRecorder) ValidateFilter(c, filter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateFilter", reflect.TypeOf((*MockValidator)(nil).ValidateFilter), c, filter)
}

// ValidateId mocks base method.
func (m *MockValidator) ValidateId(c *gin.Context) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateId", c)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateId indicates an expected call of ValidateId.
func (mr *MockValidatorMockRecorder) ValidateId(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateId", reflect.TypeOf((*MockValidator)(nil).ValidateId), c)
}

// ValidateLike mocks base method.
func (m *MockValidator) ValidateLike(c *gin.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateLike", c)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateLike indicates an expected call of ValidateLike.
func (mr *MockValidatorMockRecorder) ValidateLike(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateLike", reflect.TypeOf((*MockValidator)(nil).ValidateLike), c)
}

// ValidatePage mocks base method.
func (m *MockValidator) ValidatePage(c *gin.Context) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidatePage", c)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidatePage indicates an expected call of ValidatePage.
func (mr *MockValidatorMockRecorder) ValidatePage(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidatePage", reflect.TypeOf((*MockValidator)(nil).ValidatePage), c)
}

// ValidateSearch mocks base method.
func (m *MockValidator) ValidateSearch(c *gin.Context, search *dtos.Search) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateSearch", c, search)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateSearch indicates an expected call of ValidateSearch.
func (mr *MockValidatorMockRecorder) ValidateSearch(c, search interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateSearch", reflect.TypeOf((*MockValidator)(nil).ValidateSearch), c, search)
}

// ValidateStatus mocks base method.
func (m *MockValidator) ValidateStatus(c *gin.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateStatus", c)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateStatus indicates an expected call of ValidateStatus.
func (mr *MockValidatorMockRecorder) ValidateStatus(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateStatus", reflect.TypeOf((*MockValidator)(nil).ValidateStatus), c)
}
