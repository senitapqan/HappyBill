basePath: /
definitions:
  dtos.SignInRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.Product:
    properties:
      display_type:
        type: integer
      height:
        type: integer
      locationId:
        type: integer
      price:
        type: integer
      productId:
        type: integer
      width:
        type: integer
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      surname:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - surname
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a server for order billboards.
  title: HappyBill
  version: "1.0"
paths:
  /admin/bill:
    get:
      consumes:
      - application/json
      description: Get all billboards from data base
      operationId: get-billboards
      produces:
      - application/json
      responses: {}
      summary: GetAll
      tags:
      - admin/billboard
    post:
      consumes:
      - application/json
      description: Create the billboard and add it to data base
      operationId: create-billboard
      parameters:
      - description: ' height / width / display_type / location_id / price'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses: {}
      summary: Create
      tags:
      - admin/billboard
  /admin/bill/{id}:
    get:
      consumes:
      - application/json
      description: Get the billboard from data base
      operationId: get-billboard
      produces:
      - application/json
      responses: {}
      summary: GetById
      tags:
      - admin/billboard
    put:
      consumes:
      - application/json
      description: Update
      operationId: update-billboard
      produces:
      - application/json
      responses: {}
      summary: UpdateById
      tags:
      - admin/billboard
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: login to account
      operationId: login-account
      parameters:
      - description: username / password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dtos.SignInRequest'
      produces:
      - application/json
      responses: {}
      summary: Sign In
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: register to site
      operationId: create-account
      parameters:
      - description: username / email / password / name / surname
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses: {}
      summary: Sign Up
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: headers
    name: Authorization
    type: apiKey
swagger: "2.0"
